<UserControl x:Class="Notification.Wpf.View.NotificationProgress"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Notification.Wpf.View"
             xmlns:controls="clr-namespace:Notification.Wpf.Controls"
             xmlns:fa="http://schemas.fontawesome.io/icons/"
             xmlns:converters="clr-namespace:Notification.Wpf.Converters"
             xmlns:wpf="clr-namespace:Notification.Wpf"
             xmlns:extensions="clr-namespace:Notifications.Wpf.Extensions"
             xmlns:command="http://www.galasoft.ch/mvvmlight"
             mc:Ignorable="d" 
             Foreground="White"
             d:DesignHeight="120" d:DesignWidth="300"
             DataContext="{Binding NotificationProgressViewModel}" 
             >
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Themes/Generic.xaml"/>
            </ResourceDictionary.MergedDictionaries>

        <Style TargetType="Button">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="#22FFFFFF"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Label Content="{TemplateBinding Content}"
                           Foreground="{TemplateBinding Foreground}"
                           Background="{TemplateBinding Background}"
                           HorizontalContentAlignment="Center"
                           MinWidth="80"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#11FFFFFF"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#11000000"/>
                                <Setter Property="Foreground" Value="#FFAAAAAA"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <UserControl.InputBindings>
        <MouseBinding Gesture="LeftClick"  Command="{Binding CollapseWindowCommand}"/>
    </UserControl.InputBindings>

    <Border Padding="{Binding BarMargin}" Background="#FF444444" MinHeight="20">
        <Grid ToolTip="{Binding WaitingTime}">
            <Grid.ColumnDefinitions>
                <extensions:ColumnDefinitionCollapsable Width="Auto" Visible="{Binding Collapse, Converter={wpf:BoolInverse}}" />
                <extensions:ColumnDefinitionCollapsable Width="*"/>
            </Grid.ColumnDefinitions>
            <ContentControl Margin="0,0,12,0" Width="25" Height="25" VerticalAlignment="Top">
                <ContentControl HorizontalAlignment="Right" VerticalAlignment="Bottom" Content="{StaticResource LoadIcon}"/>
            </ContentControl>
            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <extensions:RowDefinitionCollapsable Visible="{Binding Collapse, Converter={wpf:BoolInverse}}" />
                    <extensions:RowDefinitionCollapsable/>
                    <extensions:RowDefinitionCollapsable Visible="{Binding Collapse, Converter={wpf:BoolInverse}}" />
                    <extensions:RowDefinitionCollapsable Visible="{Binding Collapse, Converter={wpf:BoolInverse}}" />
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0" Margin="{Binding BarMargin}" Text="{Binding Title}" FontWeight="Medium" TextTrimming="CharacterEllipsis"/>
                <Grid Grid.Row="1" >
                    <ProgressBar  Margin="{Binding BarMargin}" Height="{Binding BarHeight}" HorizontalAlignment="Stretch" Minimum="0" Maximum="100"
                                  Value="{Binding process}" IsIndeterminate="{Binding ShowProgress, Converter={wpf:BoolInverse}}">
                        <i:Interaction.Behaviors>
                            <controls:ProgresBarAnimateBehavior />
                        </i:Interaction.Behaviors>
                    </ProgressBar>

                    <!--<ProgressBar Margin="{Binding BarMargin}" Height="{Binding BarHeight}" HorizontalAlignment="Stretch" Minimum="0" Maximum="100"
                                 Value="{Binding process}" IsIndeterminate="{Binding ShowProgress, Converter={wpf:BoolInverse}}">
                    </ProgressBar>-->
                    <TextBlock Grid.Row="0" Margin="5" Text="{Binding Title}" FontWeight="Medium" TextTrimming="CharacterEllipsis" Foreground="#FF444444" VerticalAlignment="Center" Visibility="{Binding Collapse, Converter={converters:BoolToVisibility Collapse=True}}"/>
                </Grid>
                <TextBlock x:Name="MessageBox" Grid.Row="2"  Text="{Binding Message}" Margin="{Binding BarMargin}" TextWrapping="Wrap" Opacity=".8" MinHeight="20" >
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Style.Triggers>
                                    <DataTrigger Binding="{Binding TrimType}" Value="Trim">
                                        <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
                                        <Setter  Property="Height" Value="{Binding RowsCount, Converter={wpf:MessageRowsCountConverter BaseSize=20}}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding TrimType}" Value="NoTrim">
                                        <Setter Property="TextTrimming" Value="None"/>
                                    </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                <DockPanel Grid.Row="3">
                    <TextBlock Text="{Binding WaitingTime}" DockPanel.Dock="Left" Width="150" HorizontalAlignment="Left" VerticalAlignment="Center" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis"/>
                    <Button x:Name="Cancel" Width="100" HorizontalAlignment="Right" Content="{Binding RightButtonContent}"
                            DockPanel.Dock="Right" Margin="0,0,5,0" controls:Notification.CloseOnClick="True"
                            Visibility="{Binding ShowCancelButton, Converter={converters:BoolToVisibility Collapse=True}}"/>

                </DockPanel>

            </Grid>
        </Grid>
    </Border>
</UserControl>
